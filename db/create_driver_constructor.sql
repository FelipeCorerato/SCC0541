-- =============================================
-- FUNÇÕES PARA CADASTRO DE ESCUDERIA
-- =============================================

-- Alterando a lógica do id original para sguir como serial
ALTER TABLE constructors
ALTER COLUMN constructorid ADD GENERATED BY DEFAULT AS IDENTITY;

SELECT setval('constructors_constructorid_seq', (SELECT MAX(constructorid) FROM constructors));

-- =============================================

CREATE OR REPLACE FUNCTION fn_create_constructor(
    p_name VARCHAR,
    p_nationality VARCHAR,
    p_url VARCHAR
)
RETURNS VOID AS $$
DECLARE
    v_constructor_ref VARCHAR;
BEGIN
    v_constructor_ref := LOWER(REPLACE(p_name, ' ', '_'));
    INSERT INTO Constructors (constructor_ref, name, nationality, url)
    VALUES (
        v_constructor_ref,
        p_name,
        p_nationality,
        p_url
    );
END;
$$ LANGUAGE plpgsql;


-- =============================================
-- FUNÇÕES PARA CADASTRO DE PILOTO
-- =============================================

-- Alterando a lógica do id original para sguir como serial
ALTER TABLE driver
ALTER COLUMN driverid ADD GENERATED BY DEFAULT AS IDENTITY;

SELECT setval('driver_driverid_seq', (SELECT MAX(driverid) FROM driver));

-- =============================================

CREATE OR REPLACE FUNCTION fn_create_driver(
	p_number INTEGER,
	p_code TEXT,
	p_forename TEXT,
	p_surname TEXT,
	p_dob DATE,
    p_nationality TEXT,
    p_url TEXT
)
RETURNS VOID AS $$
DECLARE
    v_driver_ref VARCHAR;
BEGIN
    v_driver_ref := LOWER(REPLACE(p_surname, ' ', '_'));
    INSERT INTO Driver (driver_ref, number, code, forename, surname, dob, nationality, url)
    VALUES (
        v_driver_ref,
        p_number,
		p_code,
		p_forename,
		p_surname,
		p_dob,
   		p_nationality,
   		p_url
    );
END;
$$ LANGUAGE plpgsql;
